name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

env:
  AWS_REGION: sa-east-1                   # Região da AWS, e.g., us-west-1
  EC2_HOST: ${{ secrets.REMOTE_HOST }}           # Endereço IP ou domínio da instância EC2
  EC2_USER: admin                            # Usuário da instância EC2 (ajustado para Debian)
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }} # Chave SSH privada para acesso à instância EC2

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      run: |
        docker build -t pedidos-service:latest .

    - name: Save Docker image to file
      run: |
        docker save -o pedidos-service.tar pedidos-service:latest

    - name: Transfer Docker image to EC2
      uses: appleboy/scp-action
      with:
        host: ${{ env.EC2_HOST }}
        username: ${{ env.EC2_USER }}
        key: ${{ env.SSH_PRIVATE_KEY }}
        source: "pedidos-service.tar"
        target: "~/"

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Transfer Docker image to EC2
      uses: appleboy/scp-action
      with:
        host: ${{ env.EC2_HOST }}
        username: ${{ env.EC2_USER }}
        key: ${{ env.SSH_PRIVATE_KEY }}
        source: "pedidos-service.tar"
        target: "~/"

    - name: Deploy on EC2
      uses: appleboy/ssh-action@v0.1.2
      with:
        host: ${{ env.EC2_HOST }}
        username: ${{ env.EC2_USER }}
        key: ${{ env.SSH_PRIVATE_KEY }}
        script: |
          docker load -i ~/pedidos-service.tar
          docker stop pedidos-service || true
          docker rm pedidos-service || true
          docker run -d -p 8081:8081 --name pedidos-service pedidos-service:latest
